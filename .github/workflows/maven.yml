# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven and Docker

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env: 
  GITHUB_SHA: ${{ github.sha }}

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven
      run: mvn -B package --file initial/pom.xml
    - name: Docker login
      env: 
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
        unset DOCKER_USER
        unset DOCKER_PASSWORD
    - name: Build Docker image
      env: 
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
      run: |
        docker build -t "$DOCKER_USER/hello-world:$GITHUB_SHA" ./initial
        unset DOCKER_USER
    - name: Docker push
      env: 
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
      run: |
        docker push "$DOCKER_USER/hello-world:$GITHUB_SHA"
        unset DOCKER_USER
        docker logout
    - name: Adding config file
      env: 
        KUBERNETES_SECRET: ${{ secrets.KUBERNETES_SECRET }}
      run: |
        echo -e "$KUBERNETES_SECRET" > conf
        unset KUBERNETES_SECRET
    - name: Setting path and updating deployment
      env: 
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
      run: |
        export KUBECONFIG="$(pwd)/conf"
        kubectl get all -n "$DOCKER_USER"
        kubectl set image deployment/new2 hello-world="$DOCKER_USER/hello-world:$GITHUB_SHA"
        unset DOCKER_USER
        unset KUBECONFIG
    - name: Removing conf
      run: |
        rm -rf conf
    - name: Git clone
      env: 
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
      run: |
        cd ..
        git clone https://github.com/dhruvbhartia07/gs-rest-service-manifest.git
        cd gs-rest-service-manifest/initial
        sed -i "s@image:.*@image: $DOCKER_USER/hello-world:$GITHUB_SHA@" deployment.yaml
        cat deployment.yaml
    - name: Commiting and pushing files
      env: 
        NEW_TOKEN: ${{ secrets.NEW_TOKEN }}
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        EMAIL: ${{ secrets.EMAIL }}
        NAME: ${{ secrets.NAME }}
      run: | 
        cd ../gs-rest-service-manifest/initial
        git config user.email "$GITHUB_EMAIL"
        git config user.name "$GITHUB_NAME"
        git add .
        git commit -m "Updated image tag $GITHUB_SHA"
        git push "https://$DOCKER_USER:$NEW_TOKEN@github.com/dhruvbhartia07/gs-rest-service-manifest.git"

      



  
        
  
